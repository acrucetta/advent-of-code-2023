


We want to figure out how many arrangements can fit into a given row...

???.### 1,1,3
.??..??...?##. 1,1,3
?#?#?#?#?#?#?#? 1,3,1,6
????.#...#... 4,1,1
????.######..#####. 1,6,5
?###???????? 3,2,1


?###???????? 3,2,1
.###.##.#...
.###.##..#..
.###.##...#.
.###.##....#
.###..##.#..
.###..##..#.
.###..##...#
.###...##.#.
.###...##..#
.###....##.#

In this case we have up to 10 different arrangements.
A key set of values is the # of digits we get which
is the number of contiguous groups. And their size. 
Each group of # must always be of the size in the input
as well as the order.

E.g.,

We parse each line; then we get 

???.### (List of characters)
1,1,3 (List of integers)

We want to know the location of the ? (index)
and the total size of the map.

This problem contains permutation. i.e., we need to set
the values of a ## then permutate the remaining ones

Then we move each one ## and then continue permutating...


Permutations

Arrangements -> Row 

Hash Table with: row states; size; int
If we already had the same row states with size x and int; skip

We want to cache the row state and the size so we don't repeat it; the arrangement count is just the outcome



